ทำไมต้องใช้ microservice?
	micro service เป็น architecture ในการออกแบบระบบงาน โดยทุกสิ่งทุกอย่างคือการตัดสินใจ
	
	ระบบงาน
	- monolith => ระบบงานที่ทุกอย่างรวมอยู่ที่เดียวกัน ไม่ว่าจะเป็น การแสดงผล, bussiness logic, db
		ระบบนี้ง่ายสำหรับเรื่มต้น แต่พอมี feature เพิ่มขึ้นเรื่อยๆ  => ระบบงานนี้จะดูแลรักษายาก และพัฒนายากขึ้น


	- Tiers/layer => มาแก้ปัญหา monolith โดยแบ่งเป็นส่วนๆ 
		-Presentation(fronent)
		-Bussiness(backend)
		-Db
		เมื่อแบ่งแบบนี้ทำให้พัฒนาง่ายขึ้น, การทดสอบ, deploy 
			แต่เมื่อระบบงานใหญ่ขึ้น 3 ส่วนก็จะโตขึ้นตาม

	- SOA => จากปัญหา Tiers/layer จึงมีการแบ่ง Bussiness logic ให้เล็กลง
		แต่ Db ที่ใช่งานในแต่ละ bussiness ยังใช้งานร่วมกัน => ก่อให้เกิดปัญหา Db โต


	- Microservice => แก้ปัญหา SOA โดยแต่ละ service จะมี bussiness logic และ db เป็นของตัวเอง ทำให้จบในตัว => พัฒนาได้ง่าย, deploy, ทดสอบ ได้ง่าย
		และทำให้ bussiness scale ได้ง่าย แต่ก็มีข้อเสียตามมาเช่นกัน